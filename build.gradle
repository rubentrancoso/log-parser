buildscript {
	ext {
		springBootVersion = '2.0.0.M7'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }	
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

group = 'com.ef'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8
mainClassName = 'com.ef.Parser'

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }	
}

configurations {
    all*.exclude module : 'spring-boot-starter-logging'
    dev
}

dependencies {
	compile ('org.springframework.boot:spring-boot-starter')
	compile('com.googlecode.json-simple:json-simple')
	compileOnly('org.projectlombok:lombok:1.16.18')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-log4j2')
	compile('com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.5.3')
	compile('mysql:mysql-connector-java')
	compile('com.djdch.log4j:log4j-staticshutdown:1.1.0')
	compile('org.hsqldb:hsqldb')
	dev('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.apache.httpcomponents:httpclient')
	testCompile('junit:junit')
}
